{"ast":null,"code":"var _jsxFileName = \"/home/dheirav/Code/TEMP/Carbon_Gauge/client/src/components/calculator/Calculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Grid, TextField, MenuItem, Button, Box, CircularProgress, Alert, Stepper, Step, StepLabel, Card, CardContent, Divider, Radio, RadioGroup, FormControlLabel, FormLabel } from '@mui/material';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\n\n// Add constants for coolant types, disposal methods, and chip materials\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst coolantTypes = ['Water-Based', 'Oil-Based', 'Synthetic Coolant', 'Semi-Synthetic', 'Vegetable-Based'];\nconst disposalMethods = ['Recycle', 'Incineration', 'Landfill'];\nconst chipMaterials = ['Aluminum (primary production)', 'Aluminum (recycled)', 'Stainless Steel', 'Steel (general)', 'Steel (recycled)', 'Copper (primary production)', 'Copper (recycled)', 'Zinc (primary production)', 'Zinc (recycled)', 'Lead (primary production)', 'Lead (recycled)', 'Glass (virgin production)', 'Glass (recycled)', 'Cement', 'Concrete', 'Brick', 'Lime', 'Sand', 'Gravel', 'Timber', 'Plywood', 'Medium-Density Fiberboard', 'Polyethylene (PE)', 'Polypropylene (PP)', 'Polyvinyl Chloride (PVC)', 'Polystyrene', 'Polyethylene Terephthalate (PET)', 'Nylon', 'Polyurethane (rigid foam)', 'Expanded Polystyrene (EPS)'];\nconst Calculator = () => {\n  _s();\n  const {\n    token,\n    user\n  } = useAuth();\n  const isIndustrialUser = user && user.role === 'industrial';\n  const [activeStep, setActiveStep] = useState(0);\n  const [machineTypes, setMachineTypes] = useState([]);\n  const [machines, setMachines] = useState([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isIndustrial, setIsIndustrial] = useState(false);\n  const [industrialFormData, setIndustrialFormData] = useState({\n    machineId: '',\n    pu: '',\n    pi: '',\n    tidle: '',\n    dw: '',\n    Lw: '',\n    machiningAllowance: '',\n    vc: '',\n    f: '',\n    ap: '',\n    coolantType: '',\n    CC: '',\n    AC: '',\n    coolantConcentration: '',\n    toolMaterial: '',\n    toolMass: '',\n    material: '',\n    chipMass: ''\n  });\n  const [regularFormData, setRegularFormData] = useState({\n    machineId: '',\n    machineType: '',\n    manufacturer: '',\n    hours: '',\n    toolMaterial: '',\n    toolMass: '',\n    runTime: '',\n    coolantType: '',\n    disposalMethod: '',\n    chipMass: '',\n    material: '',\n    workpieceMaterial: ''\n  });\n  const [result, setResult] = useState(null);\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [toolMaterials, setToolMaterials] = useState([]);\n  const [emissionFactors, setEmissionFactors] = useState(null);\n\n  // Define steps based on the calculation type \n  const steps = isIndustrial ? ['Select Machine Type', 'Select Machine', 'Industrial Parameters', 'Tool Details', 'Coolant Details', 'Material Details'] : ['Select Machine Type', 'Select Machine', 'Tool Details', 'Coolant Details', 'Chip Material Details'];\n  useEffect(() => {\n    const fetchMachineTypes = async () => {\n      try {\n        const response = await axios.get('/api/machines/types'); // Ensure this matches your server route\n        setMachineTypes(response.data);\n      } catch (err) {\n        setError('Failed to fetch machine types');\n      }\n    };\n    fetchMachineTypes();\n  }, [token]);\n  useEffect(() => {\n    const fetchToolMaterials = async () => {\n      try {\n        const response = await axios.get('/api/machines/tool-materials');\n        setToolMaterials(response.data);\n      } catch (error) {\n        console.error('Error fetching tool materials:', error);\n      }\n    };\n    fetchToolMaterials();\n  }, []);\n  useEffect(() => {\n    const fetchEmissionFactors = async () => {\n      try {\n        const response = await axios.get('/api/machine/emission-factors', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setEmissionFactors(response.data);\n      } catch (err) {\n        console.error('Failed to fetch emission factors:', err);\n      }\n    };\n    fetchEmissionFactors();\n  }, [token]);\n  useEffect(() => {\n    if (!isIndustrialUser) {\n      setIsIndustrial(false);\n    }\n  }, [isIndustrialUser]);\n  const handleTypeChange = async e => {\n    const type = e.target.value;\n    console.log('Selected machine type:', type); // Debug log\n    setSelectedType(type);\n    setRegularFormData({\n      ...regularFormData,\n      machineType: type\n    });\n    setLoading(true);\n    try {\n      const response = await axios.get(`/api/machines?type=${type}`);\n      console.log('Machines fetched:', response.data); // Log the fetched machines\n      setMachines(response.data);\n    } catch (err) {\n      setError('Failed to fetch machines');\n    }\n    setLoading(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isIndustrial) {\n      setIndustrialFormData({\n        ...industrialFormData,\n        [name]: value\n      });\n    } else {\n      setRegularFormData({\n        ...regularFormData,\n        [name]: value\n      });\n    }\n  };\n  const handleNext = () => {\n    setActiveStep(prevStep => prevStep + 1);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Submitting with data:', regularFormData); // Debug log\n    setLoading(true);\n    try {\n      let response;\n      if (isIndustrial) {\n        response = await axios.post('/api/calculations/calculate-industrial', {\n          machineId: industrialFormData.machineId,\n          pu: industrialFormData.pu,\n          pi: industrialFormData.pi,\n          tidle: industrialFormData.tidle,\n          dw: industrialFormData.dw,\n          Lw: industrialFormData.Lw,\n          machiningAllowance: industrialFormData.machiningAllowance,\n          vc: industrialFormData.vc,\n          f: industrialFormData.f,\n          ap: industrialFormData.ap,\n          coolantType: industrialFormData.coolantType,\n          CC: industrialFormData.CC,\n          AC: industrialFormData.AC,\n          coolantConcentration: industrialFormData.coolantConcentration,\n          toolMaterial: industrialFormData.toolMaterial,\n          toolMass: industrialFormData.toolMass,\n          material: industrialFormData.material,\n          chipMass: industrialFormData.chipMass\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      } else {\n        const selectedMachine = machines.find(machine => machine._id === regularFormData.machineId);\n        response = await axios.post('/api/calculations/calculate', {\n          machineId: regularFormData.machineId,\n          machineType: regularFormData.machineType,\n          brand: selectedMachine ? selectedMachine.manufacturer : '',\n          hours: regularFormData.hours,\n          toolMaterial: regularFormData.toolMaterial,\n          toolMass: regularFormData.toolMass,\n          runTime: regularFormData.runTime,\n          coolantType: regularFormData.coolantType,\n          disposalMethod: regularFormData.disposalMethod,\n          chipMass: regularFormData.chipMass,\n          material: regularFormData.material,\n          parameters: {\n            workpieceMaterial: regularFormData.workpieceMaterial\n          }\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      setResult(response.data);\n      setActiveStep(steps.length);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error during calculation:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Calculation failed');\n    }\n    setLoading(false);\n  };\n  const getStepContent = step => {\n    if (isIndustrial) {\n      switch (step) {\n        case 0:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Select Machine Type\",\n                value: selectedType,\n                onChange: handleTypeChange,\n                required: true,\n                children: machineTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this);\n        case 1:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Select Machine\",\n                name: \"machineId\",\n                value: industrialFormData.machineId,\n                onChange: handleChange,\n                required: true,\n                children: machines.map(machine => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: machine._id,\n                  children: [machine.manufacturer, \" - \", machine.type]\n                }, machine._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this);\n        case 2:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Standby Power (pu)\",\n                name: \"pu\",\n                type: \"number\",\n                value: industrialFormData.pu,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Total Power Consumption (pi)\",\n                name: \"pi\",\n                type: \"number\",\n                value: industrialFormData.pi,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Idle Time (sec)\",\n                name: \"tidle\",\n                type: \"number\",\n                value: industrialFormData.tidle,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Workpiece Diameter (dw)\",\n                name: \"dw\",\n                type: \"number\",\n                value: industrialFormData.dw,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Workpiece Length (Lw)\",\n                name: \"Lw\",\n                type: \"number\",\n                value: industrialFormData.Lw,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Machining Allowance (\\u0394)\",\n                name: \"machiningAllowance\",\n                type: \"number\",\n                value: industrialFormData.machiningAllowance,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Cutting Velocity (vc)\",\n                name: \"vc\",\n                type: \"number\",\n                value: industrialFormData.vc,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Feed Rate (f)\",\n                name: \"f\",\n                type: \"number\",\n                value: industrialFormData.f,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Depth of Cut (ap)\",\n                name: \"ap\",\n                type: \"number\",\n                value: industrialFormData.ap,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this);\n        case 3:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Tool Material\",\n                name: \"toolMaterial\",\n                value: industrialFormData.toolMaterial,\n                onChange: handleChange,\n                required: true,\n                children: toolMaterials.map(material => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: material,\n                  children: material\n                }, material, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Tool Mass (kg)\",\n                name: \"toolMass\",\n                type: \"number\",\n                value: industrialFormData.toolMass,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Run Time (hours)\",\n                name: \"runTime\",\n                type: \"number\",\n                value: industrialFormData.runTime || '',\n                onChange: handleChange,\n                required: true,\n                margin: \"normal\",\n                error: !!(fieldErrors !== null && fieldErrors !== void 0 && fieldErrors.runTime),\n                helperText: (fieldErrors === null || fieldErrors === void 0 ? void 0 : fieldErrors.runTime) || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this);\n        case 4:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Coolant Type\",\n                name: \"coolantType\",\n                value: industrialFormData.coolantType,\n                onChange: handleChange,\n                required: true,\n                children: coolantTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Initial Cutting Fluid Volume (CC)\",\n                name: \"CC\",\n                type: \"number\",\n                value: industrialFormData.CC,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Additional Cutting Fluid Volume (AC)\",\n                name: \"AC\",\n                type: \"number\",\n                value: industrialFormData.AC,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Coolant Concentration (\\u03B4)\",\n                name: \"coolantConcentration\",\n                type: \"number\",\n                value: industrialFormData.coolantConcentration,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this);\n        case 5:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Material\",\n                name: \"material\",\n                value: industrialFormData.material,\n                onChange: handleChange,\n                required: true,\n                children: chipMaterials.map(mat => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: mat,\n                  children: mat\n                }, mat, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this);\n        default:\n          return 'Unknown step';\n      }\n    } else {\n      switch (step) {\n        case 0:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Select Machine Type\",\n                value: regularFormData.machineType,\n                onChange: handleTypeChange,\n                required: true,\n                children: machineTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this);\n        case 1:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Select Machine\",\n                name: \"machineId\",\n                value: regularFormData.machineId,\n                onChange: handleChange,\n                required: true,\n                children: machines.map(machine => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: machine._id,\n                  children: [machine.manufacturer, \" - \", machine.type]\n                }, machine._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this);\n        case 2:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Tool Material\",\n                name: \"toolMaterial\",\n                value: regularFormData.toolMaterial,\n                onChange: handleChange,\n                required: true,\n                children: toolMaterials.map(material => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: material,\n                  children: material\n                }, material, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Tool Mass (kg)\",\n                name: \"toolMass\",\n                type: \"number\",\n                value: regularFormData.toolMass,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Run Time (seconds)\",\n                name: \"runTime\",\n                type: \"number\",\n                value: regularFormData.runTime,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Operating Hours\",\n                name: \"hours\",\n                type: \"number\",\n                value: regularFormData.hours,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this);\n        case 3:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Coolant Type\",\n                name: \"coolantType\",\n                value: regularFormData.coolantType,\n                onChange: handleChange,\n                required: true,\n                children: coolantTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Disposal Method\",\n                name: \"disposalMethod\",\n                value: regularFormData.disposalMethod,\n                onChange: handleChange,\n                required: true,\n                children: disposalMethods.map(method => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: method,\n                  children: method\n                }, method, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this);\n        case 4:\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Chip Material\",\n                name: \"material\",\n                value: regularFormData.material,\n                onChange: handleChange,\n                required: true,\n                children: chipMaterials.map(material => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: material,\n                  children: material\n                }, material, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Chip Mass (kg)\",\n                name: \"chipMass\",\n                type: \"number\",\n                value: regularFormData.chipMass,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this);\n        default:\n          return 'Unknown step';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      maxHeight: '80vh',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Emissions Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 17\n    }, this), isIndustrialUser ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Calculation Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        row: true,\n        value: isIndustrial ? 'industrial' : 'regular',\n        onChange: e => setIsIndustrial(e.target.value === 'industrial'),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"regular\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 56\n          }, this),\n          label: \"Regular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"industrial\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 59\n          }, this),\n          label: \"Industrial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Calculation Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Regular Calculation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      sx: {\n        mb: 4\n      },\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Calculation Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  color: \"primary\",\n                  gutterBottom: true,\n                  children: \"Emissions Breakdown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    mb: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Electrical Emission: \", result.CEelec.toFixed(2), \" kg CO\\u2082\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Tool Emission: \", result.CEtool.toFixed(2), \" kg CO\\u2082\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Coolant Emission: \", result.CEcoolant.toFixed(2), \" kg CO\\u2082\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Material Emission: \", result.CEm.toFixed(2), \" kg CO\\u2082\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Chip Emission: \", result.CEchip.toFixed(2), \" kg CO\\u2082\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    my: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"Total Emission: \", result.total.toFixed(2), \" kg CO\\u2082\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setActiveStep(0);\n              setResult(null);\n            },\n            children: \"Calculate Another\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [getStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: () => setActiveStep(prev => prev - 1),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: activeStep === steps.length - 1 ? handleSubmit : handleNext,\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 28\n            }, this) : activeStep === steps.length - 1 ? 'Calculate' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 7\n    }, this), emissionFactors && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Emission Factors Loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 714,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"wAiBZVKLbljCtyey/wWISyiymm0=\", false, function () {\n  return [useAuth];\n});\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","Grid","TextField","MenuItem","Button","Box","CircularProgress","Alert","Stepper","Step","StepLabel","Card","CardContent","Divider","Radio","RadioGroup","FormControlLabel","FormLabel","useAuth","axios","jsxDEV","_jsxDEV","coolantTypes","disposalMethods","chipMaterials","Calculator","_s","token","user","isIndustrialUser","role","activeStep","setActiveStep","machineTypes","setMachineTypes","machines","setMachines","selectedType","setSelectedType","loading","setLoading","error","setError","isIndustrial","setIsIndustrial","industrialFormData","setIndustrialFormData","machineId","pu","pi","tidle","dw","Lw","machiningAllowance","vc","f","ap","coolantType","CC","AC","coolantConcentration","toolMaterial","toolMass","material","chipMass","regularFormData","setRegularFormData","machineType","manufacturer","hours","runTime","disposalMethod","workpieceMaterial","result","setResult","fieldErrors","setFieldErrors","toolMaterials","setToolMaterials","emissionFactors","setEmissionFactors","steps","fetchMachineTypes","response","get","data","err","fetchToolMaterials","console","fetchEmissionFactors","headers","Authorization","handleTypeChange","e","type","target","value","log","handleChange","name","handleNext","prevStep","handleSubmit","preventDefault","post","selectedMachine","find","machine","_id","brand","parameters","length","_error$response","_error$response$data","getStepContent","step","container","spacing","children","item","xs","select","fullWidth","label","onChange","required","map","fileName","_jsxFileName","lineNumber","columnNumber","sm","margin","helperText","mat","method","sx","p","maxHeight","overflowY","variant","gutterBottom","severity","mb","component","row","control","onSubmit","md","color","CEelec","toFixed","CEtool","CEcoolant","CEm","CEchip","my","total","mt","onClick","display","justifyContent","disabled","prev","size","_c","$RefreshReg$"],"sources":["/home/dheirav/Code/TEMP/Carbon_Gauge/client/src/components/calculator/Calculator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Paper,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  Button,\n  Box,\n  CircularProgress,\n  Alert,\n  Stepper,\n  Step,\n  StepLabel,\n  Card,\n  CardContent,\n  Divider,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormLabel\n} from '@mui/material';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\n\n// Add constants for coolant types, disposal methods, and chip materials\nconst coolantTypes = [\n  'Water-Based',\n  'Oil-Based',\n  'Synthetic Coolant',\n  'Semi-Synthetic',\n  'Vegetable-Based'\n];\n\nconst disposalMethods = [\n  'Recycle',\n  'Incineration',\n  'Landfill'\n];\n\nconst chipMaterials = [\n  'Aluminum (primary production)',\n  'Aluminum (recycled)',\n  'Stainless Steel',\n  'Steel (general)',\n  'Steel (recycled)',\n  'Copper (primary production)',\n  'Copper (recycled)',\n  'Zinc (primary production)',\n  'Zinc (recycled)',\n  'Lead (primary production)',\n  'Lead (recycled)',\n  'Glass (virgin production)',\n  'Glass (recycled)',\n  'Cement',\n  'Concrete',\n  'Brick',\n  'Lime',\n  'Sand',\n  'Gravel',\n  'Timber',\n  'Plywood',\n  'Medium-Density Fiberboard',\n  'Polyethylene (PE)',\n  'Polypropylene (PP)',\n  'Polyvinyl Chloride (PVC)',\n  'Polystyrene',\n  'Polyethylene Terephthalate (PET)',\n  'Nylon',\n  'Polyurethane (rigid foam)',\n  'Expanded Polystyrene (EPS)'\n];\n\nconst Calculator = () => {\n  const { token, user } = useAuth();\n  const isIndustrialUser = user && user.role === 'industrial';\n  const [activeStep, setActiveStep] = useState(0);\n  const [machineTypes, setMachineTypes] = useState([]);\n  const [machines, setMachines] = useState([]);\n  const [selectedType, setSelectedType] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isIndustrial, setIsIndustrial] = useState(false);\n  const [industrialFormData, setIndustrialFormData] = useState({\n    machineId: '',\n    pu: '',\n    pi: '',\n    tidle: '',\n    dw: '',\n    Lw: '',\n    machiningAllowance: '',\n    vc: '',\n    f: '',\n    ap: '',\n    coolantType: '',\n    CC: '',\n    AC: '',\n    coolantConcentration: '',\n    toolMaterial: '',\n    toolMass: '',\n    material: '',\n    chipMass: '',\n  });\n  const [regularFormData, setRegularFormData] = useState({\n    machineId: '',\n    machineType: '',\n    manufacturer: '',\n    hours: '',\n    toolMaterial: '',\n    toolMass: '',\n    runTime: '',\n    coolantType: '',\n    disposalMethod: '',\n    chipMass: '',\n    material: '',\n    workpieceMaterial: '',\n  });\n  const [result, setResult] = useState(null);\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [toolMaterials, setToolMaterials] = useState([]);\n  const [emissionFactors, setEmissionFactors] = useState(null);\n\n  // Define steps based on the calculation type \n  const steps = isIndustrial\n    ? ['Select Machine Type', 'Select Machine', 'Industrial Parameters', 'Tool Details', 'Coolant Details', 'Material Details']\n    : ['Select Machine Type', 'Select Machine', 'Tool Details', 'Coolant Details', 'Chip Material Details'];\n\n  useEffect(() => {\n    const fetchMachineTypes = async () => {\n      try {\n        const response = await axios.get('/api/machines/types'); // Ensure this matches your server route\n        setMachineTypes(response.data);\n      } catch (err) {\n        setError('Failed to fetch machine types');\n      }\n    };\n    fetchMachineTypes();\n  }, [token]);\n\n  useEffect(() => {\n    const fetchToolMaterials = async () => {\n      try {\n        const response = await axios.get('/api/machines/tool-materials');\n        setToolMaterials(response.data);\n      } catch (error) {\n        console.error('Error fetching tool materials:', error);\n      }\n    };\n\n    fetchToolMaterials();\n  }, []);\n\n  useEffect(() => {\n    const fetchEmissionFactors = async () => {\n      try {\n        const response = await axios.get('/api/machine/emission-factors', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        setEmissionFactors(response.data);\n      } catch (err) {\n        console.error('Failed to fetch emission factors:', err);\n      }\n    };\n\n    fetchEmissionFactors();\n  }, [token]);\n\n  useEffect(() => {\n    if (!isIndustrialUser) {\n      setIsIndustrial(false);\n    }\n  }, [isIndustrialUser]);\n\n  const handleTypeChange = async (e) => {\n    const type = e.target.value;\n    console.log('Selected machine type:', type); // Debug log\n    setSelectedType(type);\n    setRegularFormData({ ...regularFormData, machineType: type });\n    setLoading(true);\n    try {\n      const response = await axios.get(`/api/machines?type=${type}`);\n      console.log('Machines fetched:', response.data); // Log the fetched machines\n      setMachines(response.data);\n    } catch (err) {\n      setError('Failed to fetch machines');\n    }\n    setLoading(false);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    if (isIndustrial) {\n        setIndustrialFormData({ ...industrialFormData, [name]: value });\n    } else {\n        setRegularFormData({ ...regularFormData, [name]: value });\n    }\n  };\n  \n  const handleNext = () => {\n    setActiveStep((prevStep) => prevStep + 1);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log('Submitting with data:', regularFormData); // Debug log\n    setLoading(true);\n    try {\n        let response;\n        if (isIndustrial) {\n            response = await axios.post('/api/calculations/calculate-industrial', {\n                machineId: industrialFormData.machineId,\n                pu: industrialFormData.pu,\n                pi: industrialFormData.pi,\n                tidle: industrialFormData.tidle,\n                dw: industrialFormData.dw,\n                Lw: industrialFormData.Lw,\n                machiningAllowance: industrialFormData.machiningAllowance,\n                vc: industrialFormData.vc,\n                f: industrialFormData.f,\n                ap: industrialFormData.ap,\n                coolantType: industrialFormData.coolantType,\n                CC: industrialFormData.CC,\n                AC: industrialFormData.AC,\n                coolantConcentration: industrialFormData.coolantConcentration,\n                toolMaterial: industrialFormData.toolMaterial,\n                toolMass: industrialFormData.toolMass,\n                material: industrialFormData.material,\n                chipMass: industrialFormData.chipMass\n            }, { headers: { Authorization: `Bearer ${token}` } });\n        } else {\n            const selectedMachine = machines.find(machine => machine._id === regularFormData.machineId);\n            response = await axios.post('/api/calculations/calculate', {\n                machineId: regularFormData.machineId,\n                machineType: regularFormData.machineType,\n                brand: selectedMachine ? selectedMachine.manufacturer : '',\n                hours: regularFormData.hours,\n                toolMaterial: regularFormData.toolMaterial,\n                toolMass: regularFormData.toolMass,\n                runTime: regularFormData.runTime,\n                coolantType: regularFormData.coolantType,\n                disposalMethod: regularFormData.disposalMethod,\n                chipMass: regularFormData.chipMass,\n                material: regularFormData.material,\n                parameters: {\n                    workpieceMaterial: regularFormData.workpieceMaterial\n                }\n            }, { headers: { Authorization: `Bearer ${token}` } });\n        }\n        setResult(response.data);\n        setActiveStep(steps.length);\n    } catch (error) {\n        console.error('Error during calculation:', error);\n        setError(error.response?.data?.error || 'Calculation failed');\n    }\n    setLoading(false);\n  };\n\n  const getStepContent = (step) => {\n    if (isIndustrial) {\n      switch (step) {\n        case 0:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Select Machine Type\"\n                  value={selectedType}\n                  onChange={handleTypeChange}\n                  required\n                >\n                  {machineTypes.map((type) => (\n                    <MenuItem key={type} value={type}>\n                      {type}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          );\n        case 1:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Select Machine\"\n                  name=\"machineId\"\n                  value={industrialFormData.machineId}\n                  onChange={handleChange}\n                  required\n                >\n                  {machines.map((machine) => (\n                    <MenuItem key={machine._id} value={machine._id}>\n                      {machine.manufacturer} - {machine.type}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          );\n        case 2:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Standby Power (pu)\"\n                  name=\"pu\"\n                  type=\"number\"\n                  value={industrialFormData.pu}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Total Power Consumption (pi)\"\n                  name=\"pi\"\n                  type=\"number\"\n                  value={industrialFormData.pi}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Idle Time (sec)\"\n                  name=\"tidle\"\n                  type=\"number\"\n                  value={industrialFormData.tidle}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Workpiece Diameter (dw)\"\n                  name=\"dw\"\n                  type=\"number\"\n                  value={industrialFormData.dw}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Workpiece Length (Lw)\"\n                  name=\"Lw\"\n                  type=\"number\"\n                  value={industrialFormData.Lw}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Machining Allowance (Δ)\"\n                  name=\"machiningAllowance\"\n                  type=\"number\"\n                  value={industrialFormData.machiningAllowance}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  label=\"Cutting Velocity (vc)\"\n                  name=\"vc\"\n                  type=\"number\"\n                  value={industrialFormData.vc}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  label=\"Feed Rate (f)\"\n                  name=\"f\"\n                  type=\"number\"\n                  value={industrialFormData.f}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  label=\"Depth of Cut (ap)\"\n                  name=\"ap\"\n                  type=\"number\"\n                  value={industrialFormData.ap}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n            </Grid>\n          );\n        case 3:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Tool Material\"\n                  name=\"toolMaterial\"\n                  value={industrialFormData.toolMaterial}\n                  onChange={handleChange}\n                  required\n                >\n                  {toolMaterials.map((material) => (\n                    <MenuItem key={material} value={material}>\n                      {material}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Tool Mass (kg)\"\n                  name=\"toolMass\"\n                  type=\"number\"\n                  value={industrialFormData.toolMass}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Run Time (hours)\"\n                  name=\"runTime\"\n                  type=\"number\"\n                  value={industrialFormData.runTime || ''}\n                  onChange={handleChange}\n                  required\n                  margin=\"normal\"\n                  error={!!fieldErrors?.runTime}\n                  helperText={fieldErrors?.runTime || \"\"}\n                />\n              </Grid>\n            </Grid>\n          );\n        case 4:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Coolant Type\"\n                  name=\"coolantType\"\n                  value={industrialFormData.coolantType}\n                  onChange={handleChange}\n                  required\n                >\n                  {coolantTypes.map((type) => (\n                    <MenuItem key={type} value={type}>\n                      {type}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Initial Cutting Fluid Volume (CC)\"\n                  name=\"CC\"\n                  type=\"number\"\n                  value={industrialFormData.CC}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Additional Cutting Fluid Volume (AC)\"\n                  name=\"AC\"\n                  type=\"number\"\n                  value={industrialFormData.AC}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Coolant Concentration (δ)\"\n                  name=\"coolantConcentration\"\n                  type=\"number\"\n                  value={industrialFormData.coolantConcentration}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n            </Grid>\n          );\n        case 5:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Material\"\n                  name=\"material\"\n                  value={industrialFormData.material}\n                  onChange={handleChange}\n                  required\n                >\n                  {chipMaterials.map((mat) => (\n                    <MenuItem key={mat} value={mat}>\n                      {mat}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          );\n        default:\n          return 'Unknown step';\n      }\n    } else {\n      switch (step) {\n        case 0:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Select Machine Type\"\n                  value={regularFormData.machineType}\n                  onChange={handleTypeChange}\n                  required\n                >\n                  {machineTypes.map((type) => (\n                    <MenuItem key={type} value={type}>\n                      {type}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          );\n        case 1:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Select Machine\"\n                  name=\"machineId\"\n                  value={regularFormData.machineId}\n                  onChange={handleChange}\n                  required\n                >\n                  {machines.map((machine) => (\n                    <MenuItem key={machine._id} value={machine._id}>\n                      {machine.manufacturer} - {machine.type}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          );\n        case 2:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Tool Material\"\n                  name=\"toolMaterial\"\n                  value={regularFormData.toolMaterial}\n                  onChange={handleChange}\n                  required\n                >\n                  {toolMaterials.map((material) => (\n                    <MenuItem key={material} value={material}>\n                      {material}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Tool Mass (kg)\"\n                  name=\"toolMass\"\n                  type=\"number\"\n                  value={regularFormData.toolMass}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Run Time (seconds)\"\n                  name=\"runTime\"\n                  type=\"number\"\n                  value={regularFormData.runTime}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Operating Hours\"\n                  name=\"hours\"\n                  type=\"number\"\n                  value={regularFormData.hours}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n            </Grid>\n          );\n        case 3:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Coolant Type\"\n                  name=\"coolantType\"\n                  value={regularFormData.coolantType}\n                  onChange={handleChange}\n                  required\n                >\n                  {coolantTypes.map((type) => (\n                    <MenuItem key={type} value={type}>\n                      {type}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Disposal Method\"\n                  name=\"disposalMethod\"\n                  value={regularFormData.disposalMethod}\n                  onChange={handleChange}\n                  required\n                >\n                  {disposalMethods.map((method) => (\n                    <MenuItem key={method} value={method}>\n                      {method}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          );\n        case 4:\n          return (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Chip Material\"\n                  name=\"material\"\n                  value={regularFormData.material}\n                  onChange={handleChange}\n                  required\n                >\n                  {chipMaterials.map((material) => (\n                    <MenuItem key={material} value={material}>\n                      {material}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Chip Mass (kg)\"\n                  name=\"chipMass\"\n                  type=\"number\"\n                  value={regularFormData.chipMass}\n                  onChange={handleChange}\n                  required\n                />\n              </Grid>\n            </Grid>\n          );\n        default:\n          return 'Unknown step';\n      }\n    }\n  };\n\n  return (\n    <Paper sx={{ p: 3, maxHeight: '80vh', overflowY: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Emissions Calculator\n      </Typography>\n      \n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n      \n      { isIndustrialUser ? (\n        <Box sx={{ mb: 3 }}>\n          <FormLabel component=\"legend\">Calculation Type</FormLabel>\n          <RadioGroup\n            row\n            value={isIndustrial ? 'industrial' : 'regular'}\n            onChange={e => setIsIndustrial(e.target.value === 'industrial')}\n          >\n            <FormControlLabel value=\"regular\" control={<Radio />} label=\"Regular\" />\n            <FormControlLabel value=\"industrial\" control={<Radio />} label=\"Industrial\" />\n          </RadioGroup>\n        </Box>\n      ) : (\n        <Box sx={{ mb: 3 }}>\n          <FormLabel component=\"legend\">Calculation Type</FormLabel>\n          <Typography>Regular Calculation</Typography>\n        </Box>\n      )}\n\n      <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      <form onSubmit={handleSubmit}>\n        {activeStep === steps.length ? (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Calculation Results\n            </Typography>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                      Emissions Breakdown\n                    </Typography>\n                    <Divider sx={{ mb: 2 }} />\n                    <Typography>Electrical Emission: {result.CEelec.toFixed(2)} kg CO₂</Typography>\n                    <Typography>Tool Emission: {result.CEtool.toFixed(2)} kg CO₂</Typography>\n                    <Typography>Coolant Emission: {result.CEcoolant.toFixed(2)} kg CO₂</Typography>\n                    <Typography>Material Emission: {result.CEm.toFixed(2)} kg CO₂</Typography>\n                    <Typography>Chip Emission: {result.CEchip.toFixed(2)} kg CO₂</Typography>\n                    <Divider sx={{ my: 2 }} />\n                    <Typography variant=\"h6\">\n                      Total Emission: {result.total.toFixed(2)} kg CO₂\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n            <Box sx={{ mt: 3 }}>\n              <Button onClick={() => {\n                setActiveStep(0);\n                setResult(null);\n              }}>\n                Calculate Another\n              </Button>\n            </Box>\n          </Box>\n        ) : (\n          <Box>\n            {getStepContent(activeStep)}\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={() => setActiveStep((prev) => prev - 1)}\n              >\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={activeStep === steps.length - 1 ? handleSubmit : handleNext}\n                disabled={loading}\n              >\n                {loading ? <CircularProgress size={24} /> : activeStep === steps.length - 1 ? 'Calculate' : 'Next'}\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </form>\n\n      {emissionFactors && (\n        <Typography variant=\"h6\">Emission Factors Loaded</Typography>\n      )}\n    </Paper>\n  );\n};\n\nexport default Calculator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}