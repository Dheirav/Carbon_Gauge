{"ast":null,"code":"var _jsxFileName = \"/home/dheirav/Code/TEMP/Carbon_Gauge/client/src/components/analytics/Analytics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Paper, Box, Alert, CircularProgress } from '@mui/material';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, LineElement, PointElement } from 'chart.js';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [emissionData, setEmissionData] = useState([]);\n  const [error, setError] = useState('');\n  const [complianceThreshold, setComplianceThreshold] = useState(10);\n  // A flag to indicate that the chart components are registered.\n  const [isChartReady, setIsChartReady] = useState(false);\n\n  // Register Chart.js components (including line and point elements) inside a useEffect hook.\n  useEffect(() => {\n    ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, LineElement, PointElement);\n    setIsChartReady(true);\n  }, []);\n\n  // Fetch historical emission data.\n  useEffect(() => {\n    const fetchEmissionData = async () => {\n      try {\n        const response = await axios.get('/api/calculations/history', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Fetched emission data:', response.data);\n        setEmissionData(response.data);\n      } catch (err) {\n        setError('Failed to fetch emission data');\n        console.error(err);\n      }\n    };\n    fetchEmissionData();\n  }, [token]);\n  useEffect(() => {\n    // Fetch compliance threshold from settings\n    const fetchComplianceThreshold = async () => {\n      try {\n        const response = await axios.get('/api/settings', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setComplianceThreshold(response.data.complianceThreshold || 10);\n      } catch (err) {\n        console.error('Failed to load compliance threshold:', err);\n      }\n    };\n    fetchComplianceThreshold();\n  }, [token]);\n\n  // Prepare the chart data when emission data is available\n  let chartData;\n  if (emissionData.length > 0) {\n    // Use record creation dates as labels\n    const labels = emissionData.map(record => new Date(record.createdAt).toLocaleDateString());\n    chartData = {\n      labels,\n      datasets: [{\n        label: 'Electrical Emission',\n        data: emissionData.map(record => record.CEelec),\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }, {\n        label: 'Tool Emission',\n        data: emissionData.map(record => record.CEtool),\n        backgroundColor: 'rgba(54, 162, 235, 0.5)'\n      }, {\n        label: 'Coolant Emission',\n        data: emissionData.map(record => record.CEcoolant),\n        backgroundColor: 'rgba(255, 206, 86, 0.5)'\n      }, {\n        label: 'Material Emission',\n        data: emissionData.map(record => record.CEm),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Chip Emission',\n        data: emissionData.map(record => record.CEchip),\n        backgroundColor: 'rgba(153, 102, 255, 0.5)'\n      }, {\n        label: 'Total Emission',\n        data: emissionData.map(record => record.totalEmission),\n        backgroundColor: 'rgba(255, 159, 64, 0.5)'\n      }, {\n        label: 'Compliance Threshold (Total Emission)',\n        type: 'line',\n        // Render this dataset as a line\n        data: labels.map(() => complianceThreshold),\n        borderColor: 'red',\n        borderWidth: 2,\n        fill: false\n      }]\n    };\n  } else {\n    // Dummy data for fallback â€“ sample dates and values in the expected format\n    const dummyLabels = ['2023-01-01', '2023-02-01', '2023-03-01', '2023-04-01', '2023-05-01'];\n    chartData = {\n      labels: dummyLabels,\n      datasets: [{\n        label: 'Electrical Emission',\n        data: [4, 5, 3, 6, 7],\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }, {\n        label: 'Tool Emission',\n        data: [2, 3, 1, 2, 3],\n        backgroundColor: 'rgba(54, 162, 235, 0.5)'\n      }, {\n        label: 'Coolant Emission',\n        data: [1, 2, 2, 1, 2],\n        backgroundColor: 'rgba(255, 206, 86, 0.5)'\n      }, {\n        label: 'Material Emission',\n        data: [3, 2, 4, 3, 3],\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Chip Emission',\n        data: [1, 1, 2, 1, 1],\n        backgroundColor: 'rgba(153, 102, 255, 0.5)'\n      }, {\n        label: 'Total Emission',\n        data: [11, 13, 12, 13, 15],\n        backgroundColor: 'rgba(255, 159, 64, 0.5)'\n      }, {\n        label: 'Compliance Threshold (Total Emission)',\n        type: 'line',\n        data: dummyLabels.map(() => complianceThreshold),\n        borderColor: 'red',\n        borderWidth: 2,\n        fill: false\n      }]\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mt: 2,\n        p: 2,\n        height: 500\n      },\n      children: !isChartReady ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this) : emissionData.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"No historical data available to display analytics.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n_s(Analytics, \"e+rjMbOYEAHOGT4VsjlPagkWl9A=\", false, function () {\n  return [useAuth];\n});\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useEffect","useState","Typography","Paper","Box","Alert","CircularProgress","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","LineElement","PointElement","useAuth","axios","jsxDEV","_jsxDEV","Analytics","_s","token","emissionData","setEmissionData","error","setError","complianceThreshold","setComplianceThreshold","isChartReady","setIsChartReady","register","fetchEmissionData","response","get","headers","Authorization","console","log","data","err","fetchComplianceThreshold","chartData","length","labels","map","record","Date","createdAt","toLocaleDateString","datasets","label","CEelec","backgroundColor","CEtool","CEcoolant","CEm","CEchip","totalEmission","type","borderColor","borderWidth","fill","dummyLabels","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mt","height","display","justifyContent","alignItems","options","responsive","maintainAspectRatio","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["/home/dheirav/Code/TEMP/Carbon_Gauge/client/src/components/analytics/Analytics.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography, Paper, Box, Alert, CircularProgress } from '@mui/material';\nimport { Bar } from 'react-chartjs-2';\nimport { \n  Chart as ChartJS, \n  CategoryScale, \n  LinearScale, \n  BarElement, \n  Title, \n  Tooltip, \n  Legend, \n  ArcElement,\n  LineElement,\n  PointElement\n} from 'chart.js';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\n\nconst Analytics = () => {\n    const { token } = useAuth();\n    const [emissionData, setEmissionData] = useState([]);\n    const [error, setError] = useState('');\n    const [complianceThreshold, setComplianceThreshold] = useState(10);\n    // A flag to indicate that the chart components are registered.\n    const [isChartReady, setIsChartReady] = useState(false);\n\n    // Register Chart.js components (including line and point elements) inside a useEffect hook.\n    useEffect(() => {\n        ChartJS.register(\n            CategoryScale, \n            LinearScale, \n            BarElement, \n            Title, \n            Tooltip, \n            Legend, \n            ArcElement,\n            LineElement,\n            PointElement\n        );\n        setIsChartReady(true);\n    }, []);\n\n    // Fetch historical emission data.\n    useEffect(() => {\n        const fetchEmissionData = async () => {\n            try {\n                const response = await axios.get('/api/calculations/history', {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                console.log('Fetched emission data:', response.data);\n                setEmissionData(response.data);\n            } catch (err) {\n                setError('Failed to fetch emission data');\n                console.error(err);\n            }\n        };\n\n        fetchEmissionData();\n    }, [token]);\n\n    useEffect(() => {\n        // Fetch compliance threshold from settings\n        const fetchComplianceThreshold = async () => {\n            try {\n                const response = await axios.get('/api/settings', {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                setComplianceThreshold(response.data.complianceThreshold || 10);\n            } catch (err) {\n                console.error('Failed to load compliance threshold:', err);\n            }\n        };\n\n        fetchComplianceThreshold();\n    }, [token]);\n\n    // Prepare the chart data when emission data is available\n    let chartData;\n    if (emissionData.length > 0) {\n        // Use record creation dates as labels\n        const labels = emissionData.map(record =>\n            new Date(record.createdAt).toLocaleDateString()\n        );\n        chartData = {\n            labels,\n            datasets: [\n                {\n                    label: 'Electrical Emission',\n                    data: emissionData.map(record => record.CEelec),\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                },\n                {\n                    label: 'Tool Emission',\n                    data: emissionData.map(record => record.CEtool),\n                    backgroundColor: 'rgba(54, 162, 235, 0.5)',\n                },\n                {\n                    label: 'Coolant Emission',\n                    data: emissionData.map(record => record.CEcoolant),\n                    backgroundColor: 'rgba(255, 206, 86, 0.5)',\n                },\n                {\n                    label: 'Material Emission',\n                    data: emissionData.map(record => record.CEm),\n                    backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                },\n                {\n                    label: 'Chip Emission',\n                    data: emissionData.map(record => record.CEchip),\n                    backgroundColor: 'rgba(153, 102, 255, 0.5)',\n                },\n                {\n                    label: 'Total Emission',\n                    data: emissionData.map(record => record.totalEmission),\n                    backgroundColor: 'rgba(255, 159, 64, 0.5)',\n                },\n                {\n                    label: 'Compliance Threshold (Total Emission)',\n                    type: 'line',  // Render this dataset as a line\n                    data: labels.map(() => complianceThreshold),\n                    borderColor: 'red',\n                    borderWidth: 2,\n                    fill: false,\n                },\n            ],\n        };\n    } else {\n        // Dummy data for fallback â€“ sample dates and values in the expected format\n        const dummyLabels = ['2023-01-01', '2023-02-01', '2023-03-01', '2023-04-01', '2023-05-01'];\n        chartData = {\n            labels: dummyLabels,\n            datasets: [\n                {\n                    label: 'Electrical Emission',\n                    data: [4, 5, 3, 6, 7],\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                },\n                {\n                    label: 'Tool Emission',\n                    data: [2, 3, 1, 2, 3],\n                    backgroundColor: 'rgba(54, 162, 235, 0.5)',\n                },\n                {\n                    label: 'Coolant Emission',\n                    data: [1, 2, 2, 1, 2],\n                    backgroundColor: 'rgba(255, 206, 86, 0.5)',\n                },\n                {\n                    label: 'Material Emission',\n                    data: [3, 2, 4, 3, 3],\n                    backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                },\n                {\n                    label: 'Chip Emission',\n                    data: [1, 1, 2, 1, 1],\n                    backgroundColor: 'rgba(153, 102, 255, 0.5)',\n                },\n                {\n                    label: 'Total Emission',\n                    data: [11, 13, 12, 13, 15],\n                    backgroundColor: 'rgba(255, 159, 64, 0.5)',\n                },\n                {\n                    label: 'Compliance Threshold (Total Emission)',\n                    type: 'line',\n                    data: dummyLabels.map(() => complianceThreshold),\n                    borderColor: 'red',\n                    borderWidth: 2,\n                    fill: false,\n                },\n            ],\n        };\n    }\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Typography variant=\"h4\" gutterBottom>\n                Analytics\n            </Typography>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n            <Paper sx={{ mt: 2, p: 2, height: 500 }}>\n                {!isChartReady ? (\n                    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n                        <CircularProgress />\n                    </Box>\n                ) : (\n                    emissionData.length === 0 ? (\n                        <Alert severity=\"info\">No historical data available to display analytics.</Alert>\n                    ) : (\n                        <Bar\n                            data={chartData}\n                            options={{\n                                responsive: true,\n                                maintainAspectRatio: false,\n                                scales: {\n                                    y: {\n                                        beginAtZero: true,\n                                    },\n                                },\n                            }}\n                        />\n                    )\n                )}\n            </Paper>\n        </Box>\n    );\n};\n\nexport default Analytics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}